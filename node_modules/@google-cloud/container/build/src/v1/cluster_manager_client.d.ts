/// <reference types="node" />
import * as gax from 'google-gax';
import { Callback, ClientOptions } from 'google-gax';
import { Transform } from 'stream';
import * as protosTypes from '../../protos/protos';
/**
 *  Google Kubernetes Engine Cluster Manager v1
 * @class
 * @memberof v1
 */
export declare class ClusterManagerClient {
    private _descriptors;
    private _innerApiCalls;
    private _terminated;
    auth: gax.GoogleAuth;
    clusterManagerStub: Promise<{
        [name: string]: Function;
    }>;
    /**
     * Construct an instance of ClusterManagerClient.
     *
     * @param {object} [options] - The configuration object. See the subsequent
     *   parameters for more details.
     * @param {object} [options.credentials] - Credentials object.
     * @param {string} [options.credentials.client_email]
     * @param {string} [options.credentials.private_key]
     * @param {string} [options.email] - Account email address. Required when
     *     using a .pem or .p12 keyFilename.
     * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
     *     .p12 key downloaded from the Google Developers Console. If you provide
     *     a path to a JSON file, the projectId option below is not necessary.
     *     NOTE: .pem and .p12 require you to specify options.email as well.
     * @param {number} [options.port] - The port on which to connect to
     *     the remote host.
     * @param {string} [options.projectId] - The project ID from the Google
     *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
     *     the environment variable GCLOUD_PROJECT for your project ID. If your
     *     app is running in an environment which supports
     *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
     *     your project ID will be detected automatically.
     * @param {function} [options.promise] - Custom promise module to use instead
     *     of native Promises.
     * @param {string} [options.apiEndpoint] - The domain name of the
     *     API remote host.
     */
    constructor(opts?: ClientOptions);
    /**
     * The DNS address for this API service.
     */
    static get servicePath(): string;
    /**
     * The DNS address for this API service - same as servicePath(),
     * exists for compatibility reasons.
     */
    static get apiEndpoint(): string;
    /**
     * The port for this API service.
     */
    static get port(): number;
    /**
     * The scopes needed to make gRPC calls for every method defined
     * in this service.
     */
    static get scopes(): string[];
    getProjectId(): Promise<string>;
    getProjectId(callback: Callback<string, undefined, undefined>): void;
    listClusters(request: protosTypes.google.container.v1.IListClustersRequest, options?: gax.CallOptions): Promise<[protosTypes.google.container.v1.IListClustersResponse, protosTypes.google.container.v1.IListClustersRequest | undefined, {} | undefined]>;
    listClusters(request: protosTypes.google.container.v1.IListClustersRequest, options: gax.CallOptions, callback: Callback<protosTypes.google.container.v1.IListClustersResponse, protosTypes.google.container.v1.IListClustersRequest | undefined, {} | undefined>): void;
    getCluster(request: protosTypes.google.container.v1.IGetClusterRequest, options?: gax.CallOptions): Promise<[protosTypes.google.container.v1.ICluster, protosTypes.google.container.v1.IGetClusterRequest | undefined, {} | undefined]>;
    getCluster(request: protosTypes.google.container.v1.IGetClusterRequest, options: gax.CallOptions, callback: Callback<protosTypes.google.container.v1.ICluster, protosTypes.google.container.v1.IGetClusterRequest | undefined, {} | undefined>): void;
    createCluster(request: protosTypes.google.container.v1.ICreateClusterRequest, options?: gax.CallOptions): Promise<[protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.ICreateClusterRequest | undefined, {} | undefined]>;
    createCluster(request: protosTypes.google.container.v1.ICreateClusterRequest, options: gax.CallOptions, callback: Callback<protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.ICreateClusterRequest | undefined, {} | undefined>): void;
    updateCluster(request: protosTypes.google.container.v1.IUpdateClusterRequest, options?: gax.CallOptions): Promise<[protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.IUpdateClusterRequest | undefined, {} | undefined]>;
    updateCluster(request: protosTypes.google.container.v1.IUpdateClusterRequest, options: gax.CallOptions, callback: Callback<protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.IUpdateClusterRequest | undefined, {} | undefined>): void;
    updateNodePool(request: protosTypes.google.container.v1.IUpdateNodePoolRequest, options?: gax.CallOptions): Promise<[protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.IUpdateNodePoolRequest | undefined, {} | undefined]>;
    updateNodePool(request: protosTypes.google.container.v1.IUpdateNodePoolRequest, options: gax.CallOptions, callback: Callback<protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.IUpdateNodePoolRequest | undefined, {} | undefined>): void;
    setNodePoolAutoscaling(request: protosTypes.google.container.v1.ISetNodePoolAutoscalingRequest, options?: gax.CallOptions): Promise<[protosTypes.google.container.v1.IOperation, (protosTypes.google.container.v1.ISetNodePoolAutoscalingRequest | undefined), {} | undefined]>;
    setNodePoolAutoscaling(request: protosTypes.google.container.v1.ISetNodePoolAutoscalingRequest, options: gax.CallOptions, callback: Callback<protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.ISetNodePoolAutoscalingRequest | undefined, {} | undefined>): void;
    setLoggingService(request: protosTypes.google.container.v1.ISetLoggingServiceRequest, options?: gax.CallOptions): Promise<[protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.ISetLoggingServiceRequest | undefined, {} | undefined]>;
    setLoggingService(request: protosTypes.google.container.v1.ISetLoggingServiceRequest, options: gax.CallOptions, callback: Callback<protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.ISetLoggingServiceRequest | undefined, {} | undefined>): void;
    setMonitoringService(request: protosTypes.google.container.v1.ISetMonitoringServiceRequest, options?: gax.CallOptions): Promise<[protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.ISetMonitoringServiceRequest | undefined, {} | undefined]>;
    setMonitoringService(request: protosTypes.google.container.v1.ISetMonitoringServiceRequest, options: gax.CallOptions, callback: Callback<protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.ISetMonitoringServiceRequest | undefined, {} | undefined>): void;
    setAddonsConfig(request: protosTypes.google.container.v1.ISetAddonsConfigRequest, options?: gax.CallOptions): Promise<[protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.ISetAddonsConfigRequest | undefined, {} | undefined]>;
    setAddonsConfig(request: protosTypes.google.container.v1.ISetAddonsConfigRequest, options: gax.CallOptions, callback: Callback<protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.ISetAddonsConfigRequest | undefined, {} | undefined>): void;
    setLocations(request: protosTypes.google.container.v1.ISetLocationsRequest, options?: gax.CallOptions): Promise<[protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.ISetLocationsRequest | undefined, {} | undefined]>;
    setLocations(request: protosTypes.google.container.v1.ISetLocationsRequest, options: gax.CallOptions, callback: Callback<protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.ISetLocationsRequest | undefined, {} | undefined>): void;
    updateMaster(request: protosTypes.google.container.v1.IUpdateMasterRequest, options?: gax.CallOptions): Promise<[protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.IUpdateMasterRequest | undefined, {} | undefined]>;
    updateMaster(request: protosTypes.google.container.v1.IUpdateMasterRequest, options: gax.CallOptions, callback: Callback<protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.IUpdateMasterRequest | undefined, {} | undefined>): void;
    setMasterAuth(request: protosTypes.google.container.v1.ISetMasterAuthRequest, options?: gax.CallOptions): Promise<[protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.ISetMasterAuthRequest | undefined, {} | undefined]>;
    setMasterAuth(request: protosTypes.google.container.v1.ISetMasterAuthRequest, options: gax.CallOptions, callback: Callback<protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.ISetMasterAuthRequest | undefined, {} | undefined>): void;
    deleteCluster(request: protosTypes.google.container.v1.IDeleteClusterRequest, options?: gax.CallOptions): Promise<[protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.IDeleteClusterRequest | undefined, {} | undefined]>;
    deleteCluster(request: protosTypes.google.container.v1.IDeleteClusterRequest, options: gax.CallOptions, callback: Callback<protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.IDeleteClusterRequest | undefined, {} | undefined>): void;
    listOperations(request: protosTypes.google.container.v1.IListOperationsRequest, options?: gax.CallOptions): Promise<[protosTypes.google.container.v1.IListOperationsResponse, protosTypes.google.container.v1.IListOperationsRequest | undefined, {} | undefined]>;
    listOperations(request: protosTypes.google.container.v1.IListOperationsRequest, options: gax.CallOptions, callback: Callback<protosTypes.google.container.v1.IListOperationsResponse, protosTypes.google.container.v1.IListOperationsRequest | undefined, {} | undefined>): void;
    getOperation(request: protosTypes.google.container.v1.IGetOperationRequest, options?: gax.CallOptions): Promise<[protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.IGetOperationRequest | undefined, {} | undefined]>;
    getOperation(request: protosTypes.google.container.v1.IGetOperationRequest, options: gax.CallOptions, callback: Callback<protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.IGetOperationRequest | undefined, {} | undefined>): void;
    cancelOperation(request: protosTypes.google.container.v1.ICancelOperationRequest, options?: gax.CallOptions): Promise<[protosTypes.google.protobuf.IEmpty, protosTypes.google.container.v1.ICancelOperationRequest | undefined, {} | undefined]>;
    cancelOperation(request: protosTypes.google.container.v1.ICancelOperationRequest, options: gax.CallOptions, callback: Callback<protosTypes.google.protobuf.IEmpty, protosTypes.google.container.v1.ICancelOperationRequest | undefined, {} | undefined>): void;
    getServerConfig(request: protosTypes.google.container.v1.IGetServerConfigRequest, options?: gax.CallOptions): Promise<[protosTypes.google.container.v1.IServerConfig, protosTypes.google.container.v1.IGetServerConfigRequest | undefined, {} | undefined]>;
    getServerConfig(request: protosTypes.google.container.v1.IGetServerConfigRequest, options: gax.CallOptions, callback: Callback<protosTypes.google.container.v1.IServerConfig, protosTypes.google.container.v1.IGetServerConfigRequest | undefined, {} | undefined>): void;
    listNodePools(request: protosTypes.google.container.v1.IListNodePoolsRequest, options?: gax.CallOptions): Promise<[protosTypes.google.container.v1.IListNodePoolsResponse, protosTypes.google.container.v1.IListNodePoolsRequest | undefined, {} | undefined]>;
    listNodePools(request: protosTypes.google.container.v1.IListNodePoolsRequest, options: gax.CallOptions, callback: Callback<protosTypes.google.container.v1.IListNodePoolsResponse, protosTypes.google.container.v1.IListNodePoolsRequest | undefined, {} | undefined>): void;
    getNodePool(request: protosTypes.google.container.v1.IGetNodePoolRequest, options?: gax.CallOptions): Promise<[protosTypes.google.container.v1.INodePool, protosTypes.google.container.v1.IGetNodePoolRequest | undefined, {} | undefined]>;
    getNodePool(request: protosTypes.google.container.v1.IGetNodePoolRequest, options: gax.CallOptions, callback: Callback<protosTypes.google.container.v1.INodePool, protosTypes.google.container.v1.IGetNodePoolRequest | undefined, {} | undefined>): void;
    createNodePool(request: protosTypes.google.container.v1.ICreateNodePoolRequest, options?: gax.CallOptions): Promise<[protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.ICreateNodePoolRequest | undefined, {} | undefined]>;
    createNodePool(request: protosTypes.google.container.v1.ICreateNodePoolRequest, options: gax.CallOptions, callback: Callback<protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.ICreateNodePoolRequest | undefined, {} | undefined>): void;
    deleteNodePool(request: protosTypes.google.container.v1.IDeleteNodePoolRequest, options?: gax.CallOptions): Promise<[protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.IDeleteNodePoolRequest | undefined, {} | undefined]>;
    deleteNodePool(request: protosTypes.google.container.v1.IDeleteNodePoolRequest, options: gax.CallOptions, callback: Callback<protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.IDeleteNodePoolRequest | undefined, {} | undefined>): void;
    rollbackNodePoolUpgrade(request: protosTypes.google.container.v1.IRollbackNodePoolUpgradeRequest, options?: gax.CallOptions): Promise<[protosTypes.google.container.v1.IOperation, (protosTypes.google.container.v1.IRollbackNodePoolUpgradeRequest | undefined), {} | undefined]>;
    rollbackNodePoolUpgrade(request: protosTypes.google.container.v1.IRollbackNodePoolUpgradeRequest, options: gax.CallOptions, callback: Callback<protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.IRollbackNodePoolUpgradeRequest | undefined, {} | undefined>): void;
    setNodePoolManagement(request: protosTypes.google.container.v1.ISetNodePoolManagementRequest, options?: gax.CallOptions): Promise<[protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.ISetNodePoolManagementRequest | undefined, {} | undefined]>;
    setNodePoolManagement(request: protosTypes.google.container.v1.ISetNodePoolManagementRequest, options: gax.CallOptions, callback: Callback<protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.ISetNodePoolManagementRequest | undefined, {} | undefined>): void;
    setLabels(request: protosTypes.google.container.v1.ISetLabelsRequest, options?: gax.CallOptions): Promise<[protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.ISetLabelsRequest | undefined, {} | undefined]>;
    setLabels(request: protosTypes.google.container.v1.ISetLabelsRequest, options: gax.CallOptions, callback: Callback<protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.ISetLabelsRequest | undefined, {} | undefined>): void;
    setLegacyAbac(request: protosTypes.google.container.v1.ISetLegacyAbacRequest, options?: gax.CallOptions): Promise<[protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.ISetLegacyAbacRequest | undefined, {} | undefined]>;
    setLegacyAbac(request: protosTypes.google.container.v1.ISetLegacyAbacRequest, options: gax.CallOptions, callback: Callback<protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.ISetLegacyAbacRequest | undefined, {} | undefined>): void;
    startIPRotation(request: protosTypes.google.container.v1.IStartIPRotationRequest, options?: gax.CallOptions): Promise<[protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.IStartIPRotationRequest | undefined, {} | undefined]>;
    startIPRotation(request: protosTypes.google.container.v1.IStartIPRotationRequest, options: gax.CallOptions, callback: Callback<protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.IStartIPRotationRequest | undefined, {} | undefined>): void;
    completeIPRotation(request: protosTypes.google.container.v1.ICompleteIPRotationRequest, options?: gax.CallOptions): Promise<[protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.ICompleteIPRotationRequest | undefined, {} | undefined]>;
    completeIPRotation(request: protosTypes.google.container.v1.ICompleteIPRotationRequest, options: gax.CallOptions, callback: Callback<protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.ICompleteIPRotationRequest | undefined, {} | undefined>): void;
    setNodePoolSize(request: protosTypes.google.container.v1.ISetNodePoolSizeRequest, options?: gax.CallOptions): Promise<[protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.ISetNodePoolSizeRequest | undefined, {} | undefined]>;
    setNodePoolSize(request: protosTypes.google.container.v1.ISetNodePoolSizeRequest, options: gax.CallOptions, callback: Callback<protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.ISetNodePoolSizeRequest | undefined, {} | undefined>): void;
    setNetworkPolicy(request: protosTypes.google.container.v1.ISetNetworkPolicyRequest, options?: gax.CallOptions): Promise<[protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.ISetNetworkPolicyRequest | undefined, {} | undefined]>;
    setNetworkPolicy(request: protosTypes.google.container.v1.ISetNetworkPolicyRequest, options: gax.CallOptions, callback: Callback<protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.ISetNetworkPolicyRequest | undefined, {} | undefined>): void;
    setMaintenancePolicy(request: protosTypes.google.container.v1.ISetMaintenancePolicyRequest, options?: gax.CallOptions): Promise<[protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.ISetMaintenancePolicyRequest | undefined, {} | undefined]>;
    setMaintenancePolicy(request: protosTypes.google.container.v1.ISetMaintenancePolicyRequest, options: gax.CallOptions, callback: Callback<protosTypes.google.container.v1.IOperation, protosTypes.google.container.v1.ISetMaintenancePolicyRequest | undefined, {} | undefined>): void;
    listUsableSubnetworks(request: protosTypes.google.container.v1.IListUsableSubnetworksRequest, options?: gax.CallOptions): Promise<[protosTypes.google.container.v1.IUsableSubnetwork[], protosTypes.google.container.v1.IListUsableSubnetworksRequest | null, protosTypes.google.container.v1.IListUsableSubnetworksResponse]>;
    listUsableSubnetworks(request: protosTypes.google.container.v1.IListUsableSubnetworksRequest, options: gax.CallOptions, callback: Callback<protosTypes.google.container.v1.IUsableSubnetwork[], protosTypes.google.container.v1.IListUsableSubnetworksRequest | null, protosTypes.google.container.v1.IListUsableSubnetworksResponse>): void;
    /**
     * Equivalent to {@link listUsableSubnetworks}, but returns a NodeJS Stream object.
     *
     * This fetches the paged responses for {@link listUsableSubnetworks} continuously
     * and invokes the callback registered for 'data' event for each element in the
     * responses.
     *
     * The returned object has 'end' method when no more elements are required.
     *
     * autoPaginate option will be ignored.
     *
     * @see {@link https://nodejs.org/api/stream.html}
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   The parent project where subnetworks are usable.
     *   Specified in the format 'projects/*'.
     * @param {string} request.filter
     *   Filtering currently only supports equality on the networkProjectId and must
     *   be in the form: "networkProjectId=[PROJECTID]", where `networkProjectId`
     *   is the project which owns the listed subnetworks. This defaults to the
     *   parent project ID.
     * @param {number} request.pageSize
     *   The max number of results per page that should be returned. If the number
     *   of available results is larger than `page_size`, a `next_page_token` is
     *   returned which can be used to get the next page of results in subsequent
     *   requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
     * @param {string} request.pageToken
     *   Specifies a page token to use. Set this to the nextPageToken returned by
     *   previous list requests to get the next page of results.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing [UsableSubnetwork]{@link google.container.v1.UsableSubnetwork} on 'data' event.
     */
    listUsableSubnetworksStream(request?: protosTypes.google.container.v1.IListUsableSubnetworksRequest, options?: gax.CallOptions): Transform;
    /**
     * Terminate the GRPC channel and close the client.
     *
     * The client will no longer be usable and all future behavior is undefined.
     */
    close(): Promise<void>;
}
